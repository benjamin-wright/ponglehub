env:
  CLUSTER_NAME: pongle
  REGISTRY_NAME: pongle-registry.localhost
  REGISTRY_PORT: "5000"
artefacts:
- name: generate
  pipeline:
    steps:
    - name: istio
      condition: |-
        [[ ! -f infra/manifests/generated/crd-operator.yaml ]]
        [[ ! -f infra/manifests/generated/istio-operator.yaml ]]
      cmd: |-
        mkdir -p infra/manifests/generated
        curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.10.1 sh -
        helm template istio-operator ./istio-1.10.1/manifests/charts/istio-operator --namespace istio-operator > infra/manifests/generated/istio-operator.yaml
        cp ./istio-1.10.1/manifests/charts/istio-operator/crds/* infra/manifests/generated/
        rm -rf istio-1.10.1
    - name: knative
      condition: |-
        [[ ! -f infra/manifests/generated/knative-net-istio.yaml ]]
        [[ ! -f infra/manifests/generated/knative-serving-core.yaml ]]
        [[ ! -f infra/manifests/generated/knative-serving-crds.yaml ]]
      cmd: |-
        curl -L https://github.com/knative/serving/releases/download/v0.22.0/serving-crds.yaml -o infra/manifests/generated/knative-serving-crds.yaml
        curl -L https://github.com/knative/serving/releases/download/v0.22.0/serving-core.yaml -o infra/manifests/generated/knative-serving-core.yaml
        curl -L https://github.com/knative/net-istio/releases/download/v0.22.0/net-istio.yaml -o infra/manifests/generated/knative-net-istio.yaml
        yq eval-all \
          --inplace \
          '. |= (select(.kind=="Service" and .metadata.name=="knative-local-gateway") | .metadata.labels["experimental.istio.io/disable-gateway-port-translation"]="true")' \
          infra/manifests/generated/knative-net-istio.yaml
- name: start
  dependencies:
  - +generate
  pipeline:
    steps:
    - name: registry
      condition: "! k3d registry list | grep -w k3d-$REGISTRY_NAME" 
      cmd: k3d registry create $REGISTRY_NAME --port $REGISTRY_PORT
    - name: cluster
      condition: "! k3d cluster list | grep -w $CLUSTER_NAME"
      cmd: |-
        k3d cluster create $CLUSTER_NAME \
          --registry-use $REGISTRY_NAME \
          --k3s-server-arg "--no-deploy=traefik" \
          --kubeconfig-update-default=false \
          --volume $(pwd)/infra/manifests:/var/lib/rancher/k3s/server/manifests/preload \
          -p "80:80@loadbalancer" \
          --wait
    - name: kubeconfig
      cmd: |-
        mkdir -p .scratch
        k3d kubeconfig get $CLUSTER_NAME > .scratch/kubeconfig
- name: clean
  pipeline:
    steps:
    - name: remove manifests
      cmd: rm -rf infra/manifests/generated
- name: stop
  pipeline:
    steps:
    - name: cluster
      condition: "k3d cluster list | grep -w $CLUSTER_NAME"
      cmd: |-
        k3d cluster delete $CLUSTER_NAME || true
    - name: registry
      condition: "k3d registry list | grep -w k3d-$REGISTRY_NAME" 
      cmd: k3d registry delete $REGISTRY_NAME