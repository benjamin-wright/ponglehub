secrets:
  admin:
    username: admin
    # password:
  ssl:
    # key:
    # crt:

loki-stack:
  enabled: true
  promtail:
    pipelineStages:
      - docker: {}
      - regex:
          expression: "level\\=(?P<level>\\w+)"
      - labels:
          level:

prometheus:
  enabled: true
  extraScrapeConfigs: |
    - job_name: 'linkerd-controller'

      scrape_interval: 10s
      scrape_timeout: 10s

      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-service-mirror'

      scrape_interval: 10s
      scrape_timeout: 10s

      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: linkerd-service-mirror;admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'

      scrape_interval: 10s
      scrape_timeout: 10s

      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
      # Copy all pod labels to tmp labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: __tmp_pod_label_$1
      # Take `linkerd_io_` prefixed labels and copy them without the prefix
      - action: labelmap
        regex: __tmp_pod_label_linkerd_io_(.+)
        replacement:  __tmp_pod_label_$1
      # Drop the `linkerd_io_` originals
      - action: labeldrop
        regex: __tmp_pod_label_linkerd_io_(.+)
      # Copy tmp labels into real labels
      - action: labelmap
        regex: __tmp_pod_label_(.+)

grafana:
  enabled: true
  admin:
    existingSecret: grafana-creds
  plugins:
  - btplc-status-dot-panel
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - id: prometheus
        name: prometheus
        type: prometheus
        url: http://infra-prometheus-server
        access: proxy
        isDefault: true
      - id: loki
        name: Loki
        type: loki
        url: http://infra-loki:3100
        access: proxy
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
    - grafana.ponglehub.co.uk
    tls:
    - hosts:
      - grafana.ponglehub.co.uk
      secretName: ssl-secret

verdaccio:
  enabled: true
  ingress:
    enabled: true
    hosts:
    - npm.ponglehub.co.uk
    tls:
    - hosts:
      - npm.ponglehub.co.uk
      secretName: ssl-secret

chartmuseum:
  enabled: true
  env:
    open:
      STORAGE: local
      DISABLE_API: false
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi
  ingress:
    enabled: true
    hosts:
    - name: helm.ponglehub.co.uk
      tls: true
      tlsSecret: ssl-secret

linkerd:
  enabled: true
  ingress:
    hostname: linkerd.ponglehub.co.uk

strimzi-kafka-operator:
  enabled: true