allow_k8s_contexts(['pongle'])
load('../../libraries/tilt/helm.Tiltfile', 'create_namespace')

custom_build(
  'localhost:5000/db-operator',
  'just image $EXPECTED_REF',
  ['./'],
  ignore=['Tiltfile', './dist']
)

k8s_resource(
  'operator',
  trigger_mode=TRIGGER_MODE_MANUAL
)

local_resource(
  'test',
  'just int-test',
  trigger_mode=TRIGGER_MODE_MANUAL,
  auto_init=False,
  resource_deps=['operator']
)

local_resource(
  'unit',
  'just test',
  trigger_mode=TRIGGER_MODE_MANUAL,
  auto_init=False,
)

k8s_yaml('crds/cockroach-db.crd.yaml')
k8s_yaml('crds/cockroach-client.crd.yaml')
create_namespace('int-db-operator')
create_namespace('test-namespace')

k8s_yaml(helm(
  '../../helm',
  name='db-operator',
  namespace='int-db-operator',
  set=[
    'servers.operator.enabled=true',
    'servers.operator.image=localhost:5000/db-operator',
    'servers.operator.rbac.apiGroups={ponglehub.co.uk,apps,}',
    'servers.operator.rbac.resources={cockroachdbs,cockroachdbs/status,cockroachclients,cockroachclients/status,statefulsets,secrets,services,persistentvolumeclaims}',
    'servers.operator.rbac.verbs={get,list,watch,create,update,delete}',
    'servers.operator.rbac.clusterWide=true',
    'servers.operator.resources.limits.memory=64Mi',
    'servers.operator.resources.requests.memory=64Mi'
  ]
))