allow_k8s_contexts(['pongle-dev'])
load('../../libraries/tilt/helm.Tiltfile', 'namespace_yaml')

default_registry('localhost:5000', host_from_cluster='k3d-db-operator-registry:5000')

custom_build(
  'db-operator',
  'mudly +image && docker tag db-operator $EXPECTED_REF',
  ['./'],
  ignore=['Tiltfile', './dist']
)

custom_build(
  'db-operator-tests',
  'mudly +integration && docker tag db-operator-tests $EXPECTED_REF',
  ['./'],
  ignore=['Tiltfile', './dist']
)

k8s_resource(
  'operator',
  trigger_mode=TRIGGER_MODE_MANUAL
)

k8s_resource(
  'test',
  trigger_mode=TRIGGER_MODE_MANUAL,
  auto_init=False,
  resource_deps=['operator']
)

k8s_yaml('crds/cockroach-db.crd.yaml')
k8s_yaml('crds/cockroach-client.crd.yaml')
k8s_yaml(namespace_yaml('int-db-operator'))
k8s_yaml(namespace_yaml('test-namespace'))

k8s_yaml(helm(
  '../../helm',
  name='db-operator',
  namespace='int-db-operator',
  set=[
    'servers.operator.enabled=true',
    'servers.operator.image=db-operator',
    'servers.operator.rbac.apiGroups={ponglehub.co.uk}',
    'servers.operator.rbac.resources={cockroachdbs,cockroachclients}',
    'servers.operator.rbac.verbs={get,list,watch}',
    'servers.operator.rbac.clusterWide=true',
    'servers.operator.resources.limits.memory=64Mi',
    'servers.operator.resources.requests.memory=64Mi',
    'test.image=db-operator-tests',
    'test.rbac.apiGroups={ponglehub.co.uk}',
    'test.rbac.resources={cockroachdbs,cockroachclients}',
    'test.rbac.verbs={get,create,update,delete,deletecollection}',
    'test.rbac.clusterWide=true'
  ]
))