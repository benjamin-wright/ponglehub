FROM golang:1.16

WORKDIR /src

deps:
  COPY go.mod go.sum ./
  RUN go mod download

  COPY internal ./internal
  COPY cmd ./cmd

build-users-list:
  FROM +deps

  RUN --mount=type=cache,target=/root/.cache CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o users-list  ./cmd/users-list.go

  SAVE ARTIFACT users-list

docker-users-list:
  FROM scratch

  COPY +build-users-list/users-list /go/bin/users-list
  ENTRYPOINT [ "/go/bin/users-list" ]

  SAVE IMAGE auth-server/users-list

build-users-get:
  FROM +deps

  RUN --mount=type=cache,target=/root/.cache CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o users-get  ./cmd/users-get.go

  SAVE ARTIFACT users-get

docker-users-get:
  FROM scratch

  COPY +build-users-get/users-get /go/bin/users-get
  ENTRYPOINT [ "/go/bin/users-get" ]

  SAVE IMAGE auth-server/users-get

build-users-post:
  FROM +deps

  RUN --mount=type=cache,target=/root/.cache CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o users-post  ./cmd/users-post.go

  SAVE ARTIFACT users-post

docker-users-post:
  FROM scratch

  COPY +build-users-post/users-post /go/bin/users-post
  ENTRYPOINT [ "/go/bin/users-post" ]

  SAVE IMAGE auth-server/users-post

build-users-delete:
  FROM +deps

  RUN --mount=type=cache,target=/root/.cache CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o users-delete  ./cmd/users-delete.go

  SAVE ARTIFACT users-delete

docker-users-delete:
  FROM scratch

  COPY +build-users-delete/users-delete /go/bin/users-delete
  ENTRYPOINT [ "/go/bin/users-delete" ]

  SAVE IMAGE auth-server/users-delete

build-users-put:
  FROM +deps

  RUN --mount=type=cache,target=/root/.cache CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o users-put  ./cmd/users-put.go

  SAVE ARTIFACT users-put

docker-users-put:
  FROM scratch

  COPY +build-users-put/users-put /go/bin/users-put
  ENTRYPOINT [ "/go/bin/users-put" ]

  SAVE IMAGE auth-server/users-put

build-login:
  FROM +deps

  RUN --mount=type=cache,target=/root/.cache CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o login  ./cmd/login.go

  SAVE ARTIFACT login

docker-login:
  FROM scratch

  COPY +build-login/login /go/bin/login
  ENTRYPOINT [ "/go/bin/login" ]

  SAVE IMAGE auth-server/login

all:
  BUILD +docker-login
  BUILD +docker-users-put
  BUILD +docker-users-post
  BUILD +docker-users-get
  BUILD +docker-users-list
  BUILD +docker-users-delete

  BUILD ./int-test+docker
  BUILD ../db-init+docker

test:
  FROM earthly/dind:alpine

  COPY docker-compose.yaml ./
  COPY --dir migrations ./
  WITH DOCKER --compose docker-compose.yaml \
      --load auth-server/login=+docker-login \
      --load auth-server/users-put=+docker-users-put \
      --load auth-server/users-post=+docker-users-post \
      --load auth-server/users-get=+docker-users-get \
      --load auth-server/users-list=+docker-users-list \
      --load auth-server/users-delete=+docker-users-delete \
      --load auth-server/tests=./int-test+docker \
      --load db-init=../db-init+docker \
      --pull cockroachdb/cockroach:v20.2.8
    RUN sleep 5 && \
        docker run \
          --network default_default \
          -e DB_URL=postgresql://authserver:@auth-server-cockroach-public:26257/authserver \
          auth-server/tests
  END