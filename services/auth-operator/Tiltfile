allow_k8s_contexts(['pongle'])
load('../../libraries/tilt/helm.Tiltfile', 'namespace_yaml')

custom_build(
  'localhost:5000/auth-operator',
  'mudly +image && docker tag localhost:5000/auth-operator $EXPECTED_REF',
  ['./'],
  ignore=['Tiltfile', './dist']
)

custom_build(
  'localhost:5000/auth-operator-tests',
  'mudly +integration && docker tag localhost:5000/auth-operator-tests $EXPECTED_REF',
  ['./'],
  ignore=['Tiltfile', './dist']
)

k8s_resource(
  'operator',
  trigger_mode=TRIGGER_MODE_MANUAL
)

k8s_resource(
  'test',
  trigger_mode=TRIGGER_MODE_MANUAL,
  auto_init=False,
  resource_deps=['operator']
)

k8s_yaml('crds/user.crd.yaml')
k8s_yaml(namespace_yaml('int-auth-operator'))

k8s_yaml(helm(
  '../../helm',
  name='auth-operator',
  namespace='int-auth-operator',
  set=[
    'servers.operator.env.BROKER_URL="nats://nats:4222"',
    'servers.operator.image=localhost:5000/auth-operator',
    'servers.operator.rbac.apiGroups={ponglehub.co.uk}',
    'servers.operator.rbac.resources={authusers,authusers/status}',
    'servers.operator.rbac.verbs={get,list,watch,patch,update}',
    'servers.operator.rbac.clusterWide=true',
    'servers.operator.resources.limits.memory=64Mi',
    'servers.operator.resources.requests.memory=64Mi',
    'test.image=localhost:5000/auth-operator-tests',
    'test.env.BROKER_URL="http://nats:4222"',
    'test.rbac.apiGroups={ponglehub.co.uk}',
    'test.rbac.resources={authusers,authusers/status}',
    'test.rbac.verbs={get,create,update,delete,deletecollection}',
    'test.rbac.clusterWide=true',
  ]
))