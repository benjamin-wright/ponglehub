allow_k8s_contexts(['auth-operator'])
load('../../libraries/tilt/helm.Tiltfile', 'namespace_yaml')

default_registry('localhost:5000', host_from_cluster='k3d-auth-operator-registry:5000')

custom_build(
  'auth-operator-tests',
  'earthly ./int-test+image && docker tag auth-operator-tests $EXPECTED_REF',
  ['./int-test'],
  live_update=[
    sync('./int-test/tests', '/src/tests'),
  ]
)

custom_build(
  'auth-operator',
  'earthly ./operator+image && docker tag auth-operator $EXPECTED_REF',
  ['./operator'],
  live_update=[
    sync('./operator/src', '/src/src'),
  ]
)

custom_build(
  'mock',
  'earthly ./mock+image && docker tag mock $EXPECTED_REF',
  ['./mock']
)

# custom_build(
#   'mock',
#   'earthly +mock && docker tag mock $EXPECTED_REF',
#   ['./'],
#   ignore=["./int-test", "./.tmp-earthly-out", "./target"]
# )

k8s_yaml('crds/user.crd.yaml')

k8s_yaml(namespace_yaml('int-auth-operator'))

k8s_yaml(helm(
  '../../helm/tests',
  name='auth-operator',
  namespace='int-auth-operator',
  set=[
    'test.name=tests',
    'test.image=auth-operator-tests',

    'mock.image=mock',

    'app.enabled=true',
    'app.image=auth-operator',
    'app.env.RUST_LOG="info\\,auth_operator=debug"',
    'app.env.NAMESPACE="{{ .Release.Namespace }}"',
    'app.env.AUTH_ENDPOINT="http://mock"',
    'app.rbac.apiGroups={ponglehub.co.uk}',
    'app.rbac.resources={authusers}',
    'app.rbac.verbs={get,list,watch}',
    'app.rbac.clusterWide=true',
  ]
))
