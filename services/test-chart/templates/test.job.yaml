{{- $job := .Values.test -}}
{{- $migrations := .Values.migrations -}}

apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: {{ required "must enter a name property!" $job.name }}
  name: {{ required "must enter a name property!" $job.name }}
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: {{ required "must enter a name property!" $job.name }}
      annotations:
        linkerd.io/inject: disabled
    spec:
      {{- if $migrations.enabled }}
      initContainers:
      - name: setup
        image: {{ required "must enter a base migration image property!" $migrations.baseImage }}
        imagePullPolicy: Always
        volumeMounts:
        - name: config
          mountPath: /config.yaml
          subPath: config.yaml
        resources:
          requests:
            memory: 32Mi
            cpu: 1
          limits:
            memory: 32Mi
            cpu: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {{- range $migrations.sets }}
      - name: {{ .database }}-clean
        image: {{ $migrations.flywayImage }}
        imagePullPolicy: Always
        args:
        - clean
        resources:
          requests:
            memory: 32Mi
            cpu: 1
          limits:
            memory: 32Mi
            cpu: 1
        volumeMounts:
        - name: {{ .database }}-migration
          mountPath: /flyway/conf/flyway.conf
          subPath: flyway.conf
      {{- end }}
      {{- range $migrations.sets }}
      - name: {{ .database }}-migration
        image: {{ $migrations.flywayImage }}
        imagePullPolicy: Always
        args:
        - migrate
        resources:
          requests:
            memory: 32Mi
            cpu: 1
          limits:
            memory: 32Mi
            cpu: 1
        volumeMounts:
        - name: {{ .database }}-migration
          mountPath: /flyway/conf/flyway.conf
          subPath: flyway.conf
        - name: {{ .database }}-migration-files
          mountPath: /flyway/sql
      {{- end }}
      {{- end }}
      containers:
      - name: {{ $job.name | default "job" }}
        image: {{ required "must enter an image property!" $job.image}}
        imagePullPolicy: {{ $job.pullPolicy | default "Always" }}
        {{- if $job.env }}
        env:
          {{- tpl $job.env . | nindent 10 }}
        {{- end }}
        resources:
        {{- if $job.resources }}
          {{- toYaml $job.resources | nindent 10 }}
        {{- else }}
          requests:
            memory: 256Mi
            cpu: 1
          limits:
            memory: 256Mi
            cpu: 1
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {{- if $migrations.enabled }}
      volumes:
      - name: config
        configMap:
          name: {{ $migrations.name }}-base-config
      {{- range $migrations.sets }}
      - name: {{ .database }}-migration
        configMap:
          name: {{ $migrations.name }}-{{ .database }}-config
      - name: {{ .database }}-migration-files
        configMap:
          name: {{ $migrations.name }}-{{ .database }}-files
      {{- end }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
