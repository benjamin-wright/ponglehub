{{- $root := . }}
{{- range $name, $redis := .Values.redis }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ $name }}
  name: {{ $name }}
  namespace: {{ $root.Release.Namespace }}
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: {{ $name }}
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    app: {{ $name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $name }}
  serviceName: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      containers:
        - name: redis
          image:  redis:6.2.6-alpine
          imagePullPolicy: IfNotPresent
          args:
          - redis-server
          - --save
          - "60"
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          resources:
            {{- if $redis.resources }}
            {{- toYaml $redis.resources | nindent 12 }}
            {{- else }}
            requests:
              memory: 64Mi
              cpu: 0.1
            limits:
              memory: 64Mi
              cpu: 0.1
            {{- end }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: {{ $name }}
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ $redis.storage }}
{{- end }}